on:
  push:
    paths:
      - .github/workflows/build.yml
      - src/**
      - include/**
      - xmake.lua
  pull_request:
  workflow_dispatch:

jobs:
  build-windows-x86_64:
    name: Build on Windows X86_64 (MSVC)
    runs-on: windows-2022
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
        
    - name: Install xmake
      uses: xmake-io/github-action-setup-xmake@v1
        
    - name: Build BinaryStream Static (Debug)
      run: xmake f --mode=debug --kind=static && xmake --all

    - name: Build BinaryStream Shared (Debug)
      run: xmake f --mode=debug --kind=shared && xmake --all
      
    - name: Build BinaryStream Static (Release)
      run: xmake f --mode=release --kind=static && xmake --all

    - name: Build BinaryStream Shared (Release)
      run: xmake f --mode=release --kind=shared && xmake --all

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: BinaryStream-windows-x86_64-${{ github.sha }}
        path: artifacts/BinaryStream-windows-x86_64.zip

  build-windows-arm64:
    name: Build on Windows ARM64 (MSVC)
    runs-on: windows-2022
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: arm64

    - name: Install xmake
      uses: xmake-io/github-action-setup-xmake@v1
        
    - name: Build BinaryStream Static (Debug)
      run: xmake f --mode=debug --arch=arm64 --kind=static && xmake --all

    - name: Build BinaryStream Shared (Debug)
      run: xmake f --mode=debug --arch=arm64 --kind=shared && xmake --all
      
    - name: Build BinaryStream Static (Release)
      run: xmake f --mode=release --arch=arm64 --kind=static && xmake --all

    - name: Build BinaryStream Shared (Release)
      run: xmake f --mode=release --arch=arm64 --kind=shared && xmake --all

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: BinaryStream-windows-arm64-${{ github.sha }}
        path: artifacts/BinaryStream-windows-arm64.zip

  build-linux-x86_64:
    name: Build on Linux X86_64 (Clang)
    runs-on: ubuntu-24.04
    container:
      image: ubuntu:20.04
      options: --privileged
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
        
    - name: Setup Clang 18
      run: |
        ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime
        echo "Etc/UTC" > /etc/timezone
        apt-get update -y
        DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata
        apt-get install -y wget gnupg build-essential lsb-release software-properties-common zip git
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        ./llvm.sh 18
        update-alternatives --install /usr/bin/clang clang /usr/bin/clang-18 100
        update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-18 100
        apt-get install -y libc++-18-dev libc++abi-18-dev

    - name: Install xmake
      uses: xmake-io/github-action-setup-xmake@v1

    - name: Build BinaryStream Static (Debug)
      run: xmake f --mode=debug --kind=static --root && xmake --all --root

    - name: Build BinaryStream Shared (Debug)
      run: xmake f --mode=debug --kind=shared --root && xmake --all --root
      
    - name: Build BinaryStream Static (Release)
      run: xmake f --mode=release --kind=static --root && xmake --all --root

    - name: Build BinaryStream Shared (Release)
      run: xmake f --mode=release --kind=shared --root && xmake --all --root

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: BinaryStream-linux-x86_64-${{ github.sha }}
        path: artifacts/BinaryStream-linux-x86_64.zip

  build-linux-arm64:
    name: Build on Linux ARM64 (Clang)
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Clang 18
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 18
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-18 100
        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-18 100
        sudo tee /etc/apt/sources.list << 'EOF'
        deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy main restricted universe multiverse
        deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy-updates main restricted universe multiverse
        deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy-backports main restricted universe multiverse
        deb [arch=amd64] http://security.ubuntu.com/ubuntu jammy-security main restricted universe multiverse
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports jammy main restricted universe multiverse
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports jammy-updates main restricted universe multiverse
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports jammy-backports main restricted universe multiverse
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports jammy-security main restricted universe multiverse
        EOF
        sudo dpkg --add-architecture arm64
        sudo apt update
        sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc++-18-dev:arm64 libc++abi-18-dev:arm64
      
    - name: Install xmake
      uses: xmake-io/github-action-setup-xmake@v1
        
    - name: Build BinaryStream Static (Debug)
      run: xmake f --mode=debug --kind=static --arch=arm64 --sdk=/usr/aarch64-linux-gnu --bin=/usr/bin --cxflags="-target aarch64-linux-gnu" --shflags="-target aarch64-linux-gnu -fuse-ld=lld" && xmake --all

    - name: Build BinaryStream Shared (Debug)
      run: xmake f --mode=debug --kind=shared --arch=arm64 --sdk=/usr/aarch64-linux-gnu --bin=/usr/bin --cxflags="-target aarch64-linux-gnu" --shflags="-target aarch64-linux-gnu -fuse-ld=lld" && xmake --all
      
    - name: Build BinaryStream Static (Release)
      run: xmake f --mode=release --kind=static --arch=arm64 --sdk=/usr/aarch64-linux-gnu --bin=/usr/bin --cxflags="-target aarch64-linux-gnu" --shflags="-target aarch64-linux-gnu -fuse-ld=lld" && xmake --all

    - name: Build BinaryStream Shared (Release)
      run: xmake f --mode=release --kind=shared --arch=arm64 --sdk=/usr/aarch64-linux-gnu --bin=/usr/bin --cxflags="-target aarch64-linux-gnu" --shflags="-target aarch64-linux-gnu -fuse-ld=lld" && xmake --all

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: BinaryStream-linux-arm64-${{ github.sha }}
        path: artifacts/BinaryStream-linux-arm64.zip

  build-macos:
    name: Build on MacOS ARM64 (Clang)
    runs-on: macos-14
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install xmake
      uses: xmake-io/github-action-setup-xmake@v1

    - name: Build BinaryStream Static (Debug)
      run: xmake f --mode=debug --kind=static && xmake --all

    - name: Build BinaryStream Shared (Debug)
      run: xmake f --mode=debug --kind=shared && xmake --all

    - name: Build BinaryStream Static (Release)
      run: xmake f --mode=release --kind=static && xmake --all

    - name: Build BinaryStream Shared (Release)
      run: xmake f --mode=release --kind=shared && xmake --all

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: BinaryStream-macosx-arm64-${{ github.sha }}
        path: artifacts/BinaryStream-macosx-arm64.zip